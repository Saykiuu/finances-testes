{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\david\\\\OneDrive\\\\Documentos\\\\GitHub\\\\finances\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { Chart, registerables } from 'chart.js';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/http/requestService\";\nChart.register(...registerables);\nexport class DashboardComponent {\n  constructor(http) {\n    this.http = http;\n    this.loadGrafico = false;\n    this.loadHistorico = false;\n    this.loadEntrada = false;\n    this.loadSaldo = false;\n    this.loadSaida = false;\n    this.saldoFinal = 0;\n    this.saidasTotais = 0;\n    this.entradasTotais = 0;\n    this.historico = [];\n  }\n\n  ngOnInit() {\n    this.getDados();\n  }\n\n  getDados() {\n    this.getEntradas();\n    this.getsaldo();\n    this.getsaidas();\n    this.getHistorico();\n    this.getSaldoPorMes();\n  }\n\n  getHistorico() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      try {\n        _this.loadHistorico = true;\n        let con = yield _this.http.getRequest('tesouraria/transacao/historicoLimited').toPromise();\n        _this.historico = [];\n\n        if (con.status == 200) {\n          for (let d of con.result) {\n            _this.historico.push(d);\n          }\n        }\n\n        _this.loadHistorico = false;\n      } catch (error) {\n        _this.loadHistorico = false;\n        console.log(error);\n      }\n    })();\n  }\n\n  formatValores(val) {\n    let formated = val.toLocaleString('pt-br', {\n      style: 'currency',\n      currency: 'BRL'\n    });\n    return formated;\n  }\n\n  formatData(data) {\n    let splited = data.split('-');\n    return splited[2] + '/' + splited[1] + '/' + splited[0];\n  }\n\n  getsaldo() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      try {\n        _this2.loadSaldo = true;\n        let con = yield _this2.http.getRequest('tesouraria/transacao/getSaldo').toPromise();\n        console.log(con);\n\n        if (con.status == 200) {\n          console.log(con);\n          _this2.saldoFinal = con.result[0].saldo;\n        }\n\n        _this2.loadSaldo = false;\n      } catch (error) {\n        _this2.loadSaldo = false;\n        console.log(error);\n      }\n    })();\n  }\n\n  getsaidas() {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      try {\n        _this3.loadSaida = true;\n        let con = yield _this3.http.getRequest('tesouraria/transacao/getSaida').toPromise();\n\n        if (con.status == 200) {\n          _this3.saidasTotais = con.result[0].saida;\n        }\n\n        _this3.loadSaida = false;\n      } catch (error) {\n        _this3.loadSaida = false;\n        console.log(error);\n      }\n    })();\n  }\n\n  getEntradas() {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      try {\n        _this4.loadEntrada = true;\n        let con = yield _this4.http.getRequest('tesouraria/transacao/getEntrada').toPromise();\n\n        if (con.status == 200) {\n          _this4.entradasTotais = con.result[0].entradas;\n        }\n\n        _this4.loadEntrada = false;\n      } catch (error) {\n        _this4.loadEntrada = false;\n        console.log(error);\n      }\n    })();\n  }\n\n  getSaldoPorMes() {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      try {\n        _this5.loadGrafico = true;\n        let con = yield _this5.http.getRequest('tesouraria/transacao/getSaldoPorMes').toPromise();\n\n        if (con.status == 200) {\n          let labls = [];\n          let data = [];\n          con.result.forEach(e => {\n            const date = new Date(e.mes);\n            const futureDate = new Date(date.setHours(date.getHours() + 3));\n            labls.push(new Date(futureDate).toLocaleDateString('default', {\n              month: 'short'\n            }));\n            data.push(e.saldo);\n          });\n\n          _this5.createChart(labls, data);\n\n          const val = {};\n        }\n\n        _this5.loadGrafico = false;\n      } catch (error) {\n        _this5.loadGrafico = false;\n        console.log(error);\n      }\n    })();\n  }\n\n  createChart(labls, valores) {\n    const data = {\n      labels: labls,\n      datasets: [{\n        label: 'Grafico de saldo dos ultimos 6 meses',\n        data: valores,\n        backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(255, 159, 64, 0.2)', 'rgba(255, 205, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(201, 203, 207, 0.2)'],\n        borderColor: ['rgb(255, 99, 132)', 'rgb(255, 159, 64)', 'rgb(255, 205, 86)', 'rgb(75, 192, 192)', 'rgb(54, 162, 235)', 'rgb(153, 102, 255)', 'rgb(201, 203, 207)'],\n        borderWidth: 1\n      }]\n    };\n    this.chart = new Chart(\"MyChart\", {\n      type: 'bar',\n      data: data,\n      options: {\n        responsive: true,\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        },\n        plugins: {\n          legend: {\n            display: false\n          }\n        }\n      }\n    });\n  }\n\n}\n\nDashboardComponent.ɵfac = function DashboardComponent_Factory(t) {\n  return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.RequestService));\n};\n\nDashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DashboardComponent,\n  selectors: [[\"app-dashboard\"]],\n  decls: 2,\n  vars: 0,\n  template: function DashboardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"dashboard works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\".card-info[_ngcontent-%COMP%] {\\r\\n    margin-top: 10px;\\r\\n    height: 105px;\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.card-body[_ngcontent-%COMP%] {\\r\\n    text-align: center;\\r\\n    font-weight: 600;\\r\\n    font-size: 18px;\\r\\n}\\r\\n\\r\\n.grid[_ngcontent-%COMP%] {\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n}\\r\\n\\r\\n.historico[_ngcontent-%COMP%], .grafico[_ngcontent-%COMP%] {\\r\\n    margin-top: 30px;\\r\\n    padding: 10px;\\r\\n    overflow: hidden;\\r\\n    height: calc(100vh - 316px);\\r\\n}\\r\\n\\r\\n.hist-list[_ngcontent-%COMP%] {\\r\\n    position: relative;\\r\\n    height: calc(100vh - 359px);\\r\\n    overflow-y: auto;\\r\\n}\\r\\n\\r\\n.hist-list-item[_ngcontent-%COMP%] {\\r\\n    justify-content: space-between;\\r\\n    display: flex;\\r\\n    border-left: solid 3px #000;\\r\\n    padding-left: 5px;\\r\\n    margin: 10px;\\r\\n}\\r\\n\\r\\n.hist-title[_ngcontent-%COMP%] {\\r\\n    display: block;\\r\\n    font-size: 13px;\\r\\n    font-weight: 700;\\r\\n\\r\\n}\\r\\n\\r\\n.hist-desc[_ngcontent-%COMP%] {\\r\\n    font-size: 11px;\\r\\n    color: #6B6B6B;\\r\\n}\\r\\n\\r\\n.hist-qtd[_ngcontent-%COMP%] {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    font-size: 17px;\\r\\n}\\r\\n\\r\\n.card-title[_ngcontent-%COMP%] {\\r\\n    font-size: 18px;\\r\\n    font-weight: 500;\\r\\n}\\r\\n\\r\\n.vermelho[_ngcontent-%COMP%] {\\r\\n    color: var(--vermelho);\\r\\n}\\r\\n\\r\\n.verde[_ngcontent-%COMP%] {\\r\\n    color: var(--verde);\\r\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZ0JBQWdCO0lBQ2hCLGFBQWE7SUFDYixXQUFXO0FBQ2Y7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIsZ0JBQWdCO0lBQ2hCLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsdUJBQXVCO0FBQzNCOztBQUlBOztJQUVJLGdCQUFnQjtJQUNoQixhQUFhO0lBQ2IsZ0JBQWdCO0lBQ2hCLDJCQUEyQjtBQUMvQjs7QUFHQTtJQUNJLGtCQUFrQjtJQUNsQiwyQkFBMkI7SUFDM0IsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksOEJBQThCO0lBQzlCLGFBQWE7SUFDYiwyQkFBMkI7SUFDM0IsaUJBQWlCO0lBQ2pCLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsZUFBZTtJQUNmLGdCQUFnQjs7QUFFcEI7O0FBRUE7SUFDSSxlQUFlO0lBQ2YsY0FBYztBQUNsQjs7QUFFQTtJQUNJLGFBQWE7SUFDYixtQkFBbUI7SUFDbkIsZUFBZTtBQUNuQjs7QUFFQTtJQUNJLGVBQWU7SUFDZixnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxzQkFBc0I7QUFDMUI7O0FBRUE7SUFDSSxtQkFBbUI7QUFDdkIiLCJmaWxlIjoiZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2FyZC1pbmZvIHtcclxuICAgIG1hcmdpbi10b3A6IDEwcHg7XHJcbiAgICBoZWlnaHQ6IDEwNXB4O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbi5jYXJkLWJvZHkge1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcclxuICAgIGZvbnQtc2l6ZTogMThweDtcclxufVxyXG5cclxuLmdyaWQge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG59XHJcblxyXG5cclxuXHJcbi5oaXN0b3JpY28sXHJcbi5ncmFmaWNvIHtcclxuICAgIG1hcmdpbi10b3A6IDMwcHg7XHJcbiAgICBwYWRkaW5nOiAxMHB4O1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIGhlaWdodDogY2FsYygxMDB2aCAtIDMxNnB4KTtcclxufVxyXG5cclxuXHJcbi5oaXN0LWxpc3Qge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgaGVpZ2h0OiBjYWxjKDEwMHZoIC0gMzU5cHgpO1xyXG4gICAgb3ZlcmZsb3cteTogYXV0bztcclxufVxyXG5cclxuLmhpc3QtbGlzdC1pdGVtIHtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBib3JkZXItbGVmdDogc29saWQgM3B4ICMwMDA7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDVweDtcclxuICAgIG1hcmdpbjogMTBweDtcclxufVxyXG5cclxuLmhpc3QtdGl0bGUge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBmb250LXNpemU6IDEzcHg7XHJcbiAgICBmb250LXdlaWdodDogNzAwO1xyXG5cclxufVxyXG5cclxuLmhpc3QtZGVzYyB7XHJcbiAgICBmb250LXNpemU6IDExcHg7XHJcbiAgICBjb2xvcjogIzZCNkI2QjtcclxufVxyXG5cclxuLmhpc3QtcXRkIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgZm9udC1zaXplOiAxN3B4O1xyXG59XHJcblxyXG4uY2FyZC10aXRsZSB7XHJcbiAgICBmb250LXNpemU6IDE4cHg7XHJcbiAgICBmb250LXdlaWdodDogNTAwO1xyXG59XHJcblxyXG4udmVybWVsaG8ge1xyXG4gICAgY29sb3I6IHZhcigtLXZlcm1lbGhvKTtcclxufVxyXG5cclxuLnZlcmRlIHtcclxuICAgIGNvbG9yOiB2YXIoLS12ZXJkZSk7XHJcbn0iXX0= */\"]\n});","map":{"version":3,"sources":["C:/Users/david/OneDrive/Documentos/GitHub/finances/src/app/dashboard/dashboard.component.ts"],"names":["Chart","registerables","i0","i1","register","DashboardComponent","constructor","http","loadGrafico","loadHistorico","loadEntrada","loadSaldo","loadSaida","saldoFinal","saidasTotais","entradasTotais","historico","ngOnInit","getDados","getEntradas","getsaldo","getsaidas","getHistorico","getSaldoPorMes","con","getRequest","toPromise","status","d","result","push","error","console","log","formatValores","val","formated","toLocaleString","style","currency","formatData","data","splited","split","saldo","saida","entradas","labls","forEach","e","date","Date","mes","futureDate","setHours","getHours","toLocaleDateString","month","createChart","valores","labels","datasets","label","backgroundColor","borderColor","borderWidth","chart","type","options","responsive","scales","y","beginAtZero","plugins","legend","display","ɵfac","DashboardComponent_Factory","t","ɵɵdirectiveInject","RequestService","ɵcmp","ɵɵdefineComponent","selectors","decls","vars","template","DashboardComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","styles"],"mappings":"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","sourcesContent":["import { Chart, registerables } from 'chart.js';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"src/app/http/requestService\";\r\nChart.register(...registerables);\r\nexport class DashboardComponent {\r\n    constructor(http) {\r\n        this.http = http;\r\n        this.loadGrafico = false;\r\n        this.loadHistorico = false;\r\n        this.loadEntrada = false;\r\n        this.loadSaldo = false;\r\n        this.loadSaida = false;\r\n        this.saldoFinal = 0;\r\n        this.saidasTotais = 0;\r\n        this.entradasTotais = 0;\r\n        this.historico = [];\r\n    }\r\n    ngOnInit() {\r\n        this.getDados();\r\n    }\r\n    getDados() {\r\n        this.getEntradas();\r\n        this.getsaldo();\r\n        this.getsaidas();\r\n        this.getHistorico();\r\n        this.getSaldoPorMes();\r\n    }\r\n    async getHistorico() {\r\n        try {\r\n            this.loadHistorico = true;\r\n            let con = await this.http.getRequest('tesouraria/transacao/historicoLimited').toPromise();\r\n            this.historico = [];\r\n            if (con.status == 200) {\r\n                for (let d of con.result) {\r\n                    this.historico.push(d);\r\n                }\r\n            }\r\n            this.loadHistorico = false;\r\n        }\r\n        catch (error) {\r\n            this.loadHistorico = false;\r\n            console.log(error);\r\n        }\r\n    }\r\n    formatValores(val) {\r\n        let formated = val.toLocaleString('pt-br', { style: 'currency', currency: 'BRL' });\r\n        return formated;\r\n    }\r\n    formatData(data) {\r\n        let splited = data.split('-');\r\n        return splited[2] + '/' + splited[1] + '/' + splited[0];\r\n    }\r\n    async getsaldo() {\r\n        try {\r\n            this.loadSaldo = true;\r\n            let con = await this.http.getRequest('tesouraria/transacao/getSaldo').toPromise();\r\n            console.log(con);\r\n            if (con.status == 200) {\r\n                console.log(con);\r\n                this.saldoFinal = con.result[0].saldo;\r\n            }\r\n            this.loadSaldo = false;\r\n        }\r\n        catch (error) {\r\n            this.loadSaldo = false;\r\n            console.log(error);\r\n        }\r\n    }\r\n    async getsaidas() {\r\n        try {\r\n            this.loadSaida = true;\r\n            let con = await this.http.getRequest('tesouraria/transacao/getSaida').toPromise();\r\n            if (con.status == 200) {\r\n                this.saidasTotais = con.result[0].saida;\r\n            }\r\n            this.loadSaida = false;\r\n        }\r\n        catch (error) {\r\n            this.loadSaida = false;\r\n            console.log(error);\r\n        }\r\n    }\r\n    async getEntradas() {\r\n        try {\r\n            this.loadEntrada = true;\r\n            let con = await this.http.getRequest('tesouraria/transacao/getEntrada').toPromise();\r\n            if (con.status == 200) {\r\n                this.entradasTotais = con.result[0].entradas;\r\n            }\r\n            this.loadEntrada = false;\r\n        }\r\n        catch (error) {\r\n            this.loadEntrada = false;\r\n            console.log(error);\r\n        }\r\n    }\r\n    async getSaldoPorMes() {\r\n        try {\r\n            this.loadGrafico = true;\r\n            let con = await this.http.getRequest('tesouraria/transacao/getSaldoPorMes').toPromise();\r\n            if (con.status == 200) {\r\n                let labls = [];\r\n                let data = [];\r\n                con.result.forEach((e) => {\r\n                    const date = new Date(e.mes);\r\n                    const futureDate = new Date(date.setHours(date.getHours() + 3));\r\n                    labls.push(new Date(futureDate).toLocaleDateString('default', { month: 'short' }));\r\n                    data.push(e.saldo);\r\n                });\r\n                this.createChart(labls, data);\r\n                const val = {};\r\n            }\r\n            this.loadGrafico = false;\r\n        }\r\n        catch (error) {\r\n            this.loadGrafico = false;\r\n            console.log(error);\r\n        }\r\n    }\r\n    createChart(labls, valores) {\r\n        const data = {\r\n            labels: labls,\r\n            datasets: [{\r\n                    label: 'Grafico de saldo dos ultimos 6 meses',\r\n                    data: valores,\r\n                    backgroundColor: [\r\n                        'rgba(255, 99, 132, 0.2)',\r\n                        'rgba(255, 159, 64, 0.2)',\r\n                        'rgba(255, 205, 86, 0.2)',\r\n                        'rgba(75, 192, 192, 0.2)',\r\n                        'rgba(54, 162, 235, 0.2)',\r\n                        'rgba(153, 102, 255, 0.2)',\r\n                        'rgba(201, 203, 207, 0.2)'\r\n                    ],\r\n                    borderColor: [\r\n                        'rgb(255, 99, 132)',\r\n                        'rgb(255, 159, 64)',\r\n                        'rgb(255, 205, 86)',\r\n                        'rgb(75, 192, 192)',\r\n                        'rgb(54, 162, 235)',\r\n                        'rgb(153, 102, 255)',\r\n                        'rgb(201, 203, 207)'\r\n                    ],\r\n                    borderWidth: 1\r\n                }]\r\n        };\r\n        this.chart = new Chart(\"MyChart\", {\r\n            type: 'bar',\r\n            data: data,\r\n            options: {\r\n                responsive: true,\r\n                scales: {\r\n                    y: {\r\n                        beginAtZero: true\r\n                    }\r\n                },\r\n                plugins: {\r\n                    legend: {\r\n                        display: false\r\n                    }\r\n                }\r\n            },\r\n        });\r\n    }\r\n}\r\nDashboardComponent.ɵfac = function DashboardComponent_Factory(t) { return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.RequestService)); };\r\nDashboardComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: DashboardComponent, selectors: [[\"app-dashboard\"]], decls: 2, vars: 0, template: function DashboardComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"p\");\r\n        i0.ɵɵtext(1, \"dashboard works!\");\r\n        i0.ɵɵelementEnd();\r\n    } }, styles: [\".card-info[_ngcontent-%COMP%] {\\r\\n    margin-top: 10px;\\r\\n    height: 105px;\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.card-body[_ngcontent-%COMP%] {\\r\\n    text-align: center;\\r\\n    font-weight: 600;\\r\\n    font-size: 18px;\\r\\n}\\r\\n\\r\\n.grid[_ngcontent-%COMP%] {\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n}\\r\\n\\r\\n.historico[_ngcontent-%COMP%], .grafico[_ngcontent-%COMP%] {\\r\\n    margin-top: 30px;\\r\\n    padding: 10px;\\r\\n    overflow: hidden;\\r\\n    height: calc(100vh - 316px);\\r\\n}\\r\\n\\r\\n.hist-list[_ngcontent-%COMP%] {\\r\\n    position: relative;\\r\\n    height: calc(100vh - 359px);\\r\\n    overflow-y: auto;\\r\\n}\\r\\n\\r\\n.hist-list-item[_ngcontent-%COMP%] {\\r\\n    justify-content: space-between;\\r\\n    display: flex;\\r\\n    border-left: solid 3px #000;\\r\\n    padding-left: 5px;\\r\\n    margin: 10px;\\r\\n}\\r\\n\\r\\n.hist-title[_ngcontent-%COMP%] {\\r\\n    display: block;\\r\\n    font-size: 13px;\\r\\n    font-weight: 700;\\r\\n\\r\\n}\\r\\n\\r\\n.hist-desc[_ngcontent-%COMP%] {\\r\\n    font-size: 11px;\\r\\n    color: #6B6B6B;\\r\\n}\\r\\n\\r\\n.hist-qtd[_ngcontent-%COMP%] {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    font-size: 17px;\\r\\n}\\r\\n\\r\\n.card-title[_ngcontent-%COMP%] {\\r\\n    font-size: 18px;\\r\\n    font-weight: 500;\\r\\n}\\r\\n\\r\\n.vermelho[_ngcontent-%COMP%] {\\r\\n    color: var(--vermelho);\\r\\n}\\r\\n\\r\\n.verde[_ngcontent-%COMP%] {\\r\\n    color: var(--verde);\\r\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZ0JBQWdCO0lBQ2hCLGFBQWE7SUFDYixXQUFXO0FBQ2Y7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIsZ0JBQWdCO0lBQ2hCLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsdUJBQXVCO0FBQzNCOztBQUlBOztJQUVJLGdCQUFnQjtJQUNoQixhQUFhO0lBQ2IsZ0JBQWdCO0lBQ2hCLDJCQUEyQjtBQUMvQjs7QUFHQTtJQUNJLGtCQUFrQjtJQUNsQiwyQkFBMkI7SUFDM0IsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksOEJBQThCO0lBQzlCLGFBQWE7SUFDYiwyQkFBMkI7SUFDM0IsaUJBQWlCO0lBQ2pCLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsZUFBZTtJQUNmLGdCQUFnQjs7QUFFcEI7O0FBRUE7SUFDSSxlQUFlO0lBQ2YsY0FBYztBQUNsQjs7QUFFQTtJQUNJLGFBQWE7SUFDYixtQkFBbUI7SUFDbkIsZUFBZTtBQUNuQjs7QUFFQTtJQUNJLGVBQWU7SUFDZixnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxzQkFBc0I7QUFDMUI7O0FBRUE7SUFDSSxtQkFBbUI7QUFDdkIiLCJmaWxlIjoiZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2FyZC1pbmZvIHtcclxuICAgIG1hcmdpbi10b3A6IDEwcHg7XHJcbiAgICBoZWlnaHQ6IDEwNXB4O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbi5jYXJkLWJvZHkge1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcclxuICAgIGZvbnQtc2l6ZTogMThweDtcclxufVxyXG5cclxuLmdyaWQge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG59XHJcblxyXG5cclxuXHJcbi5oaXN0b3JpY28sXHJcbi5ncmFmaWNvIHtcclxuICAgIG1hcmdpbi10b3A6IDMwcHg7XHJcbiAgICBwYWRkaW5nOiAxMHB4O1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIGhlaWdodDogY2FsYygxMDB2aCAtIDMxNnB4KTtcclxufVxyXG5cclxuXHJcbi5oaXN0LWxpc3Qge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgaGVpZ2h0OiBjYWxjKDEwMHZoIC0gMzU5cHgpO1xyXG4gICAgb3ZlcmZsb3cteTogYXV0bztcclxufVxyXG5cclxuLmhpc3QtbGlzdC1pdGVtIHtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBib3JkZXItbGVmdDogc29saWQgM3B4ICMwMDA7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDVweDtcclxuICAgIG1hcmdpbjogMTBweDtcclxufVxyXG5cclxuLmhpc3QtdGl0bGUge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBmb250LXNpemU6IDEzcHg7XHJcbiAgICBmb250LXdlaWdodDogNzAwO1xyXG5cclxufVxyXG5cclxuLmhpc3QtZGVzYyB7XHJcbiAgICBmb250LXNpemU6IDExcHg7XHJcbiAgICBjb2xvcjogIzZCNkI2QjtcclxufVxyXG5cclxuLmhpc3QtcXRkIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgZm9udC1zaXplOiAxN3B4O1xyXG59XHJcblxyXG4uY2FyZC10aXRsZSB7XHJcbiAgICBmb250LXNpemU6IDE4cHg7XHJcbiAgICBmb250LXdlaWdodDogNTAwO1xyXG59XHJcblxyXG4udmVybWVsaG8ge1xyXG4gICAgY29sb3I6IHZhcigtLXZlcm1lbGhvKTtcclxufVxyXG5cclxuLnZlcmRlIHtcclxuICAgIGNvbG9yOiB2YXIoLS12ZXJkZSk7XHJcbn0iXX0= */\"] });\r\n"]},"metadata":{},"sourceType":"module"}